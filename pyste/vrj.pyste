# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# PyJuggler is (C) Copyright 2002, 2003 by Patrick Hartling
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
#
# *************** <auto-copyright.pl END do not edit this line> ***************

Kernel = Class('vrj::Kernel', 'vrj/Kernel/Kernel.h')
exclude(Kernel.getInputManager)
exclude(Kernel.getThread)
set_policy(Kernel.instance, return_value_policy(reference_existing_object))
set_policy(Kernel.getUser, return_internal_reference())

App = Class('vrj::App', 'vrj/Kernel/App.h')
exclude(App.getSoundManager)

GlApp = Class('vrj::GlApp', 'vrj/Draw/OGL/GlApp.h')
exclude(GlApp.getDrawManager)
exclude(GlApp.getSoundManager)

# XXX: Cannot expose vrj::OsgApp or vrj::OpenSGApp without OSG and OpenSG
# installed (respectively).
#Class('vrj::OsgApp', 'vrj/Draw/OSG/OsgApp.h')
#Class('vrj::OpenSGApp', 'vrj/Draw/OpenSG/OpenSGApp.h')

User = Class('vrj::User', 'vrj/Kernel/User.h')
exclude(User.getHeadPosProxy)

# -----------------------------------------------------------------------------
# XXX: The classes beyond this point have questinoable value.  They are not
# needed for applicatinos, but they can be useful for simplifying work on
# Python-based extensions to VR Juggler itself.
# -----------------------------------------------------------------------------
Display = Class('vrj::Display', 'vrj/Display/Display.h')
set_policy(Display.getViewport, return_internal_reference())

Projection = Class('vrj::Projection', 'vrj/Display/Projection.h')
set_policy(Projection.getViewport, return_internal_reference())
exclude(Projection.outStream)

CameraProjection = Class('vrj::CameraProjection',
                         'vrj/Display/CameraProjection.h')
exclude(CameraProjection.outStream)

Viewport = Class('vrj::Viewport', 'vrj/Display/Viewport.h')
set_policy(Viewport.getUser, return_internal_reference())
set_policy(Viewport.getDisplay, return_internal_reference())
set_policy(Viewport.getLeftProj, return_internal_reference())
set_policy(Viewport.getRightProj, return_internal_reference())
exclude(Viewport.outStream)

SimViewport = Class('vrj::SimViewport', 'vrj/Display/SimViewport.h')
set_policy(SimViewport.getDrawSimInterface, return_internal_reference())
exclude(SimViewport.outStream)

Frustum = Class('vrj::Frustum', 'vrj/Display/Frustum.h')
exclude(Frustum.frust)
