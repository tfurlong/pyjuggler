# ************** <auto-copyright.pl BEGIN do not edit this line> **************
#
# PyJuggler is (C) Copyright 2002-2004 by Patrick Hartling
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# -----------------------------------------------------------------
# File:          $RCSfile$
# Date modified: $Date$
# Version:       $Revision$
# -----------------------------------------------------------------
#
# *************** <auto-copyright.pl END do not edit this line> ***************

prefix=		@prefix@
scriptdir=	$(top_srcdir)/release/scripts
topdir=		@topdir@
moddir=		$(topdir)/src/mods

include @topdir@/src/common.mk

MKINSTALLDIRS=	$(scriptdir)/mkinstalldirs

CXX=		@CXX@
CXXFLAGS=	@BOOST_PYTHON_INCLUDES@ @CXXFLAGS_DYNLIB@ $(EXTRA_CXXFLAGS)

ifeq (@OS_TYPE@, Win32)
   CXXFLAGS+=	/Zm800 /GX /GR /Op /DBOOST_PYTHON_DYNAMIC_LIB		\
   		/Zc:wchar_t,forScope
   CXXFLAGS_DBG=/Z7 /Od /Ob0 /MDd /D_DEBUG
   CXXFLAGS_OPT=/Ogity /O2 /Gs /Ob2 /MD /D_OPT
   LDFLAGS_DBG=	/DEBUG
   LDFLAGS_OPT=	/RELEASE
   MODEXT_DBG=	_d
   MODEXT_OPT=	
else
   CXXFLAGS_DBG=-D_DEBUG -g
   CXXFLAGS_OPT=-D_OPT -O2
   LDFLAGS_DBG=	-g
   LDFLAGS_OPT=	-O2
   MODEXT_DBG=	
   MODEXT_OPT=	
endif

CXXFLAGS+=	@PYTHON_INCLUDES@ -I$(top_srcdir) -I$(top_srcdir)/src	\
		-I$(srcdir) $(DEFS)
CXX_PLUGIN=	@CXX_PLUGIN@
#DEFS=		@DEFS@
INCLUDES=	-I$(top_srcdir) -I$(top_srcdir)/src -I$(srcdir)		\
		$(EXTRA_INCLUDES)
OBJDIR_DBG=	obj.dbg
OBJDIR_OPT=	obj.opt
PYTHON=		@PYTHON@
PYSTE=		$(PYTHON) @PYSTE@ $(INCLUDES)

PYTHON_VERSION=		@PYTHON_VERSION@
PYTHON_PACKAGES=	$(prefix)/lib/python$(PYTHON_VERSION)/site-packages/PyJuggler

PYTHON_LDFLAGS=		@PYTHON_LIB_DEPS@

# Linker flags needed by all extension modules.
LDFLAGS=		@EXTRA_LINK_FLAGS@ $(BOOST_PYTHON_LDFLAGS)	\
			$(PYTHON_LDFLAGS)

ifeq (@OS_TYPE@, Win32)
   LDFLAGS+=		/nologo /subsystem:console /INCREMENTAL:NO
endif

ifeq ($(BUILD_TYPE), DEBUG)
   CXXFLAGS+=			$(CXXFLAGS_DBG)
   LDFLAGS+=			$(LDFLAGS_DBG)
   MOD_SUFFIX=			$(MODEXT_DBG)
   OBJDIR=			$(OBJDIR_DBG)
   BOOST_PYTHON_LDFLAGS=	@BOOST_PYTHON_LDFLAGS_DBG@
   PYJUTIL_LIB=			@PYJUTIL_LDFLAGS_DBG@
else
   CXXFLAGS+=			$(CXXFLAGS_OPT)
   LDFLAGS+=			$(LDFLAGS_OPT)
   MOD_SUFFIX=			$(MODEXT_OPT)
   OBJDIR=			$(OBJDIR_OPT)
   BOOST_PYTHON_LDFLAGS=	@BOOST_PYTHON_LDFLAGS_OPT@
   PYJUTIL_LIB=			@PYJUTIL_LDFLAGS_OPT@
endif

PYMOD_EXT=		$(MOD_SUFFIX)@PYMOD_EXT@
DYLIB_NAME_FLAG=	@DYLIB_NAME_FLAG@
OBJEXT=			@OBJEXT@
OBJ_NAME_FLAG=		@OBJ_NAME_FLAG@

OBJCOPY=		@OBJCOPY@
USE_OBJCOPY=		@USE_OBJCOPY@

PYSTE_FILES=	vpr.pyste	\
		jccl.pyste	\
		gadget.pyste	\
		__vrj.pyste

ifeq (@HAVE_OSG@, Y)
PYSTE_FILES+=	__osgapp.pyste
endif

OBJS=	$(addprefix $(OBJDIR)/, $(SRCS:.cpp=.$(OBJEXT)))
#MOD=	$(moddir)/$(MOD_NAME)$(PYMOD_EXT)
MOD=	$(MOD_NAME)$(PYMOD_EXT)

vpath %.cpp $(srcdir)
vpath %.pyste $(srcdir)/../pyste

# -----------------------------------------------------------------------------
# Targets
# -----------------------------------------------------------------------------

default: optim

beforebuild:
	@$(MKINSTALLDIRS) $(OBJDIR)

optim:
	$(MAKE) BUILD_TYPE=OPTIMIZED beforebuild
	$(MAKE) BUILD_TYPE=OPTIMIZED $(MOD)

debug:
	$(MAKE) BUILD_TYPE=DEBUG beforebuild
	$(MAKE) BUILD_TYPE=DEBUG $(MOD)

install:
	$(MKINSTALLDIRS) $(PYTHON_PACKAGES)
	cp -p $(MOD) $(PYTHON_PACKAGES)

# Rule for generating a .cpp file from a .pyste file.
#%.cpp: %.pyste
#	$(PYSTE) --python-ns=pyj --module=$(basename $(@F)) $<

$(OBJDIR)/%.$(OBJEXT): %.cpp
	$(CXX) $(CXXFLAGS) $(OBJ_NAME_FLAG) -c $<
ifeq ($(USE_OBJCOPY), yes)
	$(OBJCOPY) -v --set-section-flags .debug_str=contents,debug $@ $@
endif

$(MOD): $(OBJS)
	$(CXX_PLUGIN) $(DYLIB_NAME_FLAG) $(OBJS) $(LDFLAGS) $(EXTRA_LDFLAGS)

cleandepend:
	rm -f $(DEPEND_FILES)

clean:
	rm -rf $(OBJDIR_DBG) $(OBJDIR_OPT)
	rm -f $(DEPEND_FILES)

clobber:
	$(MAKE) clean
	rm -f $(MOD)

# -----------------------------------------------------------------------------
# Dependency generation.
# -----------------------------------------------------------------------------
BASIC_OBJECTS=	$(SRCS:.cpp=.$(OBJEXT))
MKDEP_C=	$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -M
MKDEP_CXX=	$(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) -M

include $(top_srcdir)/Doozer++/mk/dpp.dep.mk
-include $(DEPEND_FILES)
